version: '3.8'

services:

  traefik:
    image: traefik:v2.2
    ports:
      - 80:80
      - 443:443
    deploy:
      placement:
        constraints:
          # Place traefik on a specified swarm node
          # because it will have the volume for the certificates
          - node.labels.traefik == true
      labels:
        # Enable Traefik for this service.
        - traefik.enable=true
        # Use this docker network
        - traefik.docker.network=tomudo
        # admin-auth middleware with HTTP Basic auth
        # Using the environment variables USERNAME and HASHED_PASSWORD
        - traefik.http.middlewares.admin-auth.basicauth.users=${TOMUDO_TRAEFIK_USER}:${TOMUDO_TRAEFIK_HASHED_PASSWORD}
        # router and middleware to redirect http to https
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.traefik-http.rule=Host(`${TOMUDO_TRAEFIK_PUBLIC_HOST}`)
        - traefik.http.routers.traefik-http.entrypoints=http
        - traefik.http.routers.traefik-http.middlewares=https-redirect
        # https router
        - traefik.http.routers.traefik-https.rule=Host(`${TOMUDO_TRAEFIK_PUBLIC_HOST}`)
        - traefik.http.routers.traefik-https.entrypoints=https
        - traefik.http.routers.traefik-https.tls=true
        # Use the special Traefik service api@internal with the web UI/Dashboard
        - traefik.http.routers.traefik-https.service=api@internal
        # Use the "le" (Let's Encrypt) resolver created below
        - traefik.http.routers.traefik-https.tls.certresolver=le
        # Enable HTTP Basic auth, using the middleware created above
        - traefik.http.routers.traefik-https.middlewares=admin-auth
        # Define the port inside of the Docker service to use
        - traefik.http.services.traefik.loadbalancer.server.port=8080
    volumes:
      # Allows Traefik to read the labels of other docker services
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount the volume to store the certificates
      - traefik-certificates:/certificates
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Only use services with traefik.enabled
      - --providers.docker.exposedbydefault=false
      # Enable Docker Swarm mode
      - --providers.docker.swarmmode
      # Create an entrypoint "http" and "https"
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      # https://docs.traefik.io/user-guides/docker-compose/acme-tls/
      - --certificatesresolvers.letsencrypt.acme.email=${TOMUDO_ADMIN_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/certificates/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # Enable the access log
      - --accesslog
      # Enable the Traefik log
      - --log
      # Enable the Dashboard and API
      - --api
    networks:
      - tomudo

  todo:
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.todo.rule=Host(`${TOMUDO_TODO_PUBLIC_HOST}`)
        - traefik.http.routers.todo.entrypoints=https
        - traefik.http.routers.todo.tls.certresolver=letsencrypt

  shopping-list:
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.todo.rule=Host(`${TOMUDO_TODO_PUBLIC_HOST}`)
        - traefik.http.routers.todo.entrypoints=https
        - traefik.http.routers.todo.tls.certresolver=letsencrypt

volumes:
  traefik-certificates:
